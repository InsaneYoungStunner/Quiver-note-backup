{
  "title": "Apache Kafka 概述",
  "cells": [
    {
      "type": "text",
      "data": "<p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">在大数据中，使用了大量的数据。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">关于数据，我们有两个主要挑战。第一个挑战是如何收集大量的数据，第二个挑战是分析收集的数据。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">为了克服这些挑战，您必须需要一个消息系统。</span></p><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">Kafka专为分布式高吞吐量系统而设计。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">Kafka往往工作得很好，作为一个更传统的消息代理的替代品。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">与其他消息传递系统相比，Kafka具有更好的吞吐量，内置分区，复制和固有的容错能力，这使得它非常适合大规模消息处理应用程序。</span></p>"
    },
    {
      "type": "text",
      "data": "<h2 trans_replace=\"0\" trans=\"1\" style=\"margin: 20px 0px 10px; padding: 0px; color: rgb(0, 0, 0); line-height: 1.7; font-size: 16px; font-family: Verdana, Arial, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">什么是消息系统？</span></h2><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">消息系统负责将数据从一个应用程序传输到另一个应用程序，因此应用程序可以专注于数据，但不担心如何共享它。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">分布式消息传递基于可靠消息队列的概念。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">消息在客户端应用程序和消息传递系统之间异步排队。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">有两种类型的消息模式可用 - 一种是点对点，另一种是发布 - 订阅(pub-sub)消息系统。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">大多数消息模式遵循<strong style=\"margin: 0px; padding: 0px;\">&nbsp;pub-sub&nbsp;</strong>。</span></p><h3 trans_replace=\"0\" trans=\"1\" style=\"margin: 20px 0px 10px; padding: 0px; color: rgb(0, 0, 0); line-height: 1.7; font-size: 14px; font-family: Verdana, Arial, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">点对点消息系统</span></h3><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">在点对点系统中，消息被保留在队列中。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">一个或多个消费者可以消耗队列中的消息，但是特定消息只能由最多一个消费者消费。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">一旦消费者读取队列中的消息，它就从该队列中消失。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">该系统的典型示例是订单处理系统，其中每个订单将由一个订单处理器处理，但多个订单处理器也可以同时工作。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">下图描述了结构。</span></p>"
    },
    {
      "type": "text",
      "data": "<h3 trans_replace=\"0\" trans=\"1\" style=\"margin: 20px 0px 10px; padding: 0px; color: rgb(0, 0, 0); line-height: 1.7; font-size: 14px; font-family: Verdana, Arial, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">发布 - 订阅消息系统</span></h3><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">在发布 - 订阅系统中，消息被保留在主题中。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">与点对点系统不同，消费者可以订阅一个或多个主题并使用该主题中的所有消息。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">在发布 - 订阅系统中，消息生产者称为发布者，消息使用者称为订阅者。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">一个现实生活的例子是Dish电视，它发布不同的渠道，如运动，电影，音乐等，任何人都可以订阅自己的频道集，并获得他们订阅的频道时可用。</span></p>"
    },
    {
      "type": "text",
      "data": "<h2 trans_replace=\"0\" trans=\"1\" style=\"margin: 20px 0px 10px; padding: 0px; color: rgb(0, 0, 0); line-height: 1.7; font-size: 16px; font-family: Verdana, Arial, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">什么是Kafka？</span></h2><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">Apache Kafka是一个分布式发布 - 订阅消息系统和一个强大的队列，可以处理大量的数据，并使您能够将消息从一个端点传递到另一个端点。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">Kafka适合离线和在线消息消费。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">Kafka消息保留在磁盘上，并在群集内复制以防止数据丢失。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">Kafka构建在ZooKeeper同步服务之上。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">它与Apache Storm和Spark非常好地集成，用于实时流式数据分析。</span></p>"
    },
    {
      "type": "text",
      "data": "<h3 trans_replace=\"0\" trans=\"1\" style=\"margin: 20px 0px 10px; padding: 0px; color: rgb(0, 0, 0); line-height: 1.7; font-size: 14px; font-family: Verdana, Arial, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">好处</span></h3><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">以下是Kafka的几个好处 -</span></p><ul class=\"list\" style=\"margin: 10px 0px; padding: 0px 0px 0px 30px; list-style-position: outside; list-style-image: none; line-height: 1.7; color: rgb(0, 0, 0); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><li style=\"margin: 0px; padding: 0px;\"><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7;\"><span style=\"margin: 0px; padding: 0px;\"><strong style=\"margin: 0px; padding: 0px;\">可靠性</strong>&nbsp;- Kafka是分布式，分区，复制和容错的。</span></p></li><li style=\"margin: 0px; padding: 0px;\"><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7;\"><span style=\"margin: 0px; padding: 0px;\"><strong style=\"margin: 0px; padding: 0px;\">可扩展性</strong>&nbsp;- Kafka消息传递系统轻松缩放，无需停机。</span></p></li><li style=\"margin: 0px; padding: 0px;\"><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7;\"><span style=\"margin: 0px; padding: 0px;\"><strong style=\"margin: 0px; padding: 0px;\">耐用性</strong>&nbsp;- Kafka使用<q style=\"margin: 0px; padding: 0px;\">分布式提交日志</q>，这意味着消息会尽可能快地保留在磁盘上，因此它是持久的。</span></p></li><li style=\"margin: 0px; padding: 0px;\"><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7;\"><span style=\"margin: 0px; padding: 0px;\"><strong style=\"margin: 0px; padding: 0px;\">性能</strong>&nbsp;- Kafka对于发布和订阅消息都具有高吞吐量。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">即使存储了许多TB的消息，它也保持稳定的性能。</span></p></li></ul><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">Kafka非常快，并保证零停机和零数据丢失。</span></p>"
    },
    {
      "type": "text",
      "data": "<h3 trans_replace=\"0\" trans=\"1\" style=\"margin: 20px 0px 10px; padding: 0px; color: rgb(0, 0, 0); line-height: 1.7; font-size: 14px; font-family: Verdana, Arial, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">用例</span></h3><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">Kafka可以在许多用例中使用。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">其中一些列出如下 -</span></p><ul class=\"list\" style=\"margin: 10px 0px; padding: 0px 0px 0px 30px; list-style-position: outside; list-style-image: none; line-height: 1.7; color: rgb(0, 0, 0); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><li style=\"margin: 0px; padding: 0px;\"><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7;\"><span style=\"margin: 0px; padding: 0px;\"><strong style=\"margin: 0px; padding: 0px;\">指标</strong>&nbsp;- Kafka通常用于操作监控数据。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">这涉及聚合来自分布式应用程序的统计信息，以产生操作数据的集中馈送。</span></p></li><li style=\"margin: 0px; padding: 0px;\"><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7;\"><span style=\"margin: 0px; padding: 0px;\"><strong style=\"margin: 0px; padding: 0px;\">日志聚合解决方案</strong>&nbsp;- Kafka可用于跨组织从多个服务收集日志，并使它们以标准格式提供给多个服务器。</span></p></li><li style=\"margin: 0px; padding: 0px;\"><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7;\"><span style=\"margin: 0px; padding: 0px;\"><strong style=\"margin: 0px; padding: 0px;\">流处理</strong>&nbsp;- 流行的框架(如Storm和Spark Streaming)从主题中读取数据，对其进行处理，并将处理后的数据写入新主题，供用户和应用程序使用。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">Kafka的强耐久性在流处理的上下文中也非常有用。</span></p></li></ul>"
    },
    {
      "type": "text",
      "data": "<h3 trans_replace=\"0\" trans=\"1\" style=\"margin: 20px 0px 10px; padding: 0px; color: rgb(0, 0, 0); line-height: 1.7; font-size: 14px; font-family: Verdana, Arial, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">需要Kafka</span></h3><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">Kafka是一个统一的平台，用于处理所有实时数据Feed。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">Kafka支持低延迟消息传递，并在出现机器故障时提供对容错的保证。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">它具有处理大量不同消费者的能力。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">Kafka非常快，执行2百万写/秒。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">Kafka将所有数据保存到磁盘，这实质上意味着所有写入都会进入操作系统(RAM)的页面缓存。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">这使得将数据从页面缓存传输到网络套接字非常有效。</span></p><div><span style=\"margin: 0px; padding: 0px;\"><br></span></div>"
    }
  ]
}