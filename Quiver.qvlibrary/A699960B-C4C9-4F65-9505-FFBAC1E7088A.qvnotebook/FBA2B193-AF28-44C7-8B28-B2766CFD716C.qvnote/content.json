{
  "title": "将修改Tomcat的默认端口（8080）到80端口",
  "cells": [
    {
      "type": "text",
      "data": "<p style=\"box-sizing: border-box; margin: 0px; padding: 0px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">如何使用默认80端口登陆Tomcat的<a href=\"http://localhost/index.jsp\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(202, 12, 22); text-decoration: none; margin: 0px; padding: 0px; outline: none; background-position: initial initial; background-repeat: initial initial;\">http://localhost/index.jsp</a>页面&nbsp;<br style=\"box-sizing: border-box;\"><br style=\"box-sizing: border-box;\">实现这样的访问方式方法比较简单。<br style=\"box-sizing: border-box;\">&nbsp;<br style=\"box-sizing: border-box;\">1、打开Tomcat下conf文件夹中的server.xml文件<br style=\"box-sizing: border-box;\">&nbsp;<br style=\"box-sizing: border-box;\">2、找到<br style=\"box-sizing: border-box;\">&nbsp;<br style=\"box-sizing: border-box;\">&lt;port=\"8080\"<br style=\"box-sizing: border-box;\">maxThreads=\"150\"<br style=\"box-sizing: border-box;\">minSpareThreads=\"25\"<br style=\"box-sizing: border-box;\">maxSpareThreads=\"75\"<br style=\"box-sizing: border-box;\">enableLookups=\"false\"<br style=\"box-sizing: border-box;\">redirectPort=\"8443\"<br style=\"box-sizing: border-box;\">acceptCount=\"100\"<br style=\"box-sizing: border-box;\">debug=\"0\"<br style=\"box-sizing: border-box;\">connectionTimeout=\"20000\"<br style=\"box-sizing: border-box;\">disableUploadTimeout=\"true\"<br style=\"box-sizing: border-box;\">/&gt;<br style=\"box-sizing: border-box;\">&nbsp;<br style=\"box-sizing: border-box;\">修改为<br style=\"box-sizing: border-box;\">&lt;port=\"80\"<br style=\"box-sizing: border-box;\">maxThreads=\"150\"<br style=\"box-sizing: border-box;\">minSpareThreads=\"25\"<br style=\"box-sizing: border-box;\">maxSpareThreads=\"75\"<br style=\"box-sizing: border-box;\">enableLookups=\"false\"<br style=\"box-sizing: border-box;\">redirectPort=\"8443\"<br style=\"box-sizing: border-box;\">acceptCount=\"100\"<br style=\"box-sizing: border-box;\">debug=\"0\"<br style=\"box-sizing: border-box;\">connectionTimeout=\"20000\"<br style=\"box-sizing: border-box;\">disableUploadTimeout=\"true\"<br style=\"box-sizing: border-box;\">/&gt;<br style=\"box-sizing: border-box;\">&nbsp;<br style=\"box-sizing: border-box;\">3、重新启动Tomcat<br style=\"box-sizing: border-box;\">&nbsp;<br style=\"box-sizing: border-box;\">4、在地址栏中输入<a href=\"http://localhost/index.jsp\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(202, 12, 22); text-decoration: none; margin: 0px; padding: 0px; outline: none; background-position: initial initial; background-repeat: initial initial;\">http://localhost/index.jsp</a>便可进入到Tomcat首页</p><p style=\"box-sizing: border-box; margin: 0px; padding: 0px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">5、如果在访问过程中发现服务器做了缓存，不刷新页面，可以使用一个过滤器，强制页面不做缓存。 只需在一 &nbsp;&nbsp;&nbsp;</p><p style=\"box-sizing: border-box; margin: 0px; padding: 0px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp; 个过滤器(通常在编码过滤器中)中加入如下语句：<br style=\"box-sizing: border-box;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; response.setHeader(\"Cache-Control\",\"no-store\"); &nbsp;&nbsp;<br style=\"box-sizing: border-box;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; response.setHeader(\"Pragma\",\"no-cache\"); &nbsp;&nbsp;<br style=\"box-sizing: border-box;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; response.setDateHeader(\"Expires\",0);&nbsp;&nbsp;&nbsp;<br style=\"box-sizing: border-box;\">&nbsp;<br style=\"box-sizing: border-box;\">&nbsp;6、如果通过js在传递参数的时候产生（单字）乱码，则需用 encodeURI（）对参数进行编码即可。</p>"
    }
  ]
}