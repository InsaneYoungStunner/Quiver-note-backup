{
  "title": "Swarms",
  "cells": [
    {
      "type": "text",
      "data": "you deploy this application onto a cluster, running it on multiple machines. Multi-container, multi-machine applications are made possible by joining multiple machines into a “Dockerized” cluster called a swarm."
    },
    {
      "type": "code",
      "language": "sh",
      "data": "docker-machine create --driver virtualbox myvm1 # Create a VM (Mac, Win7, Linux)\ndocker-machine create -d hyperv --hyperv-virtual-switch \"myswitch\" myvm1 # Win10\ndocker-machine env myvm1                # View basic information about your node\ndocker-machine ssh myvm1 \"docker node ls\"         # List the nodes in your swarm\ndocker-machine ssh myvm1 \"docker node inspect <node ID>\"        # Inspect a node\ndocker-machine ssh myvm1 \"docker swarm join-token -q worker\"   # View join token\ndocker-machine ssh myvm1   # Open an SSH session with the VM; type \"exit\" to end\ndocker node ls                # View nodes in swarm (while logged on to manager)\ndocker-machine ssh myvm2 \"docker swarm leave\"  # Make the worker leave the swarm\ndocker-machine ssh myvm1 \"docker swarm leave -f\" # Make master leave, kill swarm\ndocker-machine ls # list VMs, asterisk shows which VM this shell is talking to\ndocker-machine start myvm1            # Start a VM that is currently not running\ndocker-machine env myvm1      # show environment variables and command for myvm1\neval $(docker-machine env myvm1)         # Mac command to connect shell to myvm1\n& \"C:\\Program Files\\Docker\\Docker\\Resources\\bin\\docker-machine.exe\" env myvm1 | Invoke-Expression   # Windows command to connect shell to myvm1\ndocker stack deploy -c <file> <app>  \n docker stack ps getstartedlab\n # Deploy an app; command shell must be set to talk to manager (myvm1), uses local Compose file\ndocker-machine scp docker-compose.yml myvm1:~ # Copy file to node's home dir (only required if you use ssh to connect to manager and deploy the app)\ndocker-machine ssh myvm1 \"docker stack deploy -c <file> <app>\"   # Deploy an app using ssh (you must have first copied the Compose file to myvm1)\neval $(docker-machine env -u)     # Disconnect shell from VMs, use native docker\ndocker-machine stop $(docker-machine ls -q)               # Stop all running VMs\ndocker-machine rm $(docker-machine ls -q) # Delete all VMs and their disk images"
    }
  ]
}