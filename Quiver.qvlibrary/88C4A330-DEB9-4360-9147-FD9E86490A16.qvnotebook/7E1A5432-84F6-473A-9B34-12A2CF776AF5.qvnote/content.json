{
  "title": "zookeeper workflow",
  "cells": [
    {
      "type": "text",
      "data": "<p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">一旦ZooKeeper集合启动，它将等待客户端连接。</span><span style=\"margin: 0px; padding: 0px;\">客户端将连接到ZooKeeper集合中的一个节点。</span><span style=\"margin: 0px; padding: 0px;\">它可以是leader或follower节点。</span><span style=\"margin: 0px; padding: 0px;\">一旦客户端被连接，节点将向特定客户端分配会话ID并向该客户端发送确认。</span><span style=\"margin: 0px; padding: 0px;\">如果客户端没有收到确认，它将尝试连接ZooKeeper集合中的另一个节点。</span>&nbsp;<span style=\"margin: 0px; padding: 0px;\">一旦连接到节点，客户端将以有规律的间隔向节点发送心跳，以确保连接不会丢失。</span></p><ul class=\"list\" style=\"margin: 10px 0px; padding: 0px 0px 0px 30px; list-style-position: outside; list-style-image: none; line-height: 1.7; color: rgb(0, 0, 0); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><li style=\"margin: 0px; padding: 0px;\"><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7;\"><span style=\"margin: 0px; padding: 0px;\"><strong style=\"margin: 0px; padding: 0px;\">如果客户端想要读取特定的znode，</strong>它将会向具有znode路径的节点发送<strong style=\"margin: 0px; padding: 0px;\">读取请求</strong>，并且节点通过从其自己的数据库获取来返回所请求的znode</span><span style=\"margin: 0px; padding: 0px;\">。</span><span style=\"margin: 0px; padding: 0px;\">为此，在ZooKeeper集合中读取速度很快。</span></p></li><li style=\"margin: 0px; padding: 0px;\"><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7;\"><strong style=\"margin: 0px; padding: 0px;\">如果客户端想要将数据存储在ZooKeeper集合中</strong>，则会将znode路径和数据发送到服务器。连接的服务器将该请求转发给leader，然后leader将向所有的follower重新发出写入请求。如果只有大部分节点成功响应，而写入请求成功，则成功返回代码将被发送到客户端。 否则，写入请求失败。绝大多数节点被称为<strong style=\"margin: 0px; padding: 0px;\">&nbsp;Quorum&nbsp;</strong>。</p></li></ul><h2 trans_replace=\"0\" trans=\"1\" style=\"margin: 20px 0px 10px; padding: 0px; color: rgb(0, 0, 0); line-height: 1.7; font-size: 16px; font-family: Verdana, Arial, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">ZooKeeper集合中的节点</span></h2><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">让我们分析在ZooKeeper集合中拥有不同数量的节点的效果。</span></p><ul class=\"list\" style=\"margin: 10px 0px; padding: 0px 0px 0px 30px; list-style-position: outside; list-style-image: none; line-height: 1.7; color: rgb(0, 0, 0); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><li style=\"margin: 0px; padding: 0px;\"><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7;\"><span style=\"margin: 0px; padding: 0px;\">如果我们有<strong style=\"margin: 0px; padding: 0px;\">单个节点</strong>，则当该节点故障时，ZooKeeper集合将故障。</span><span style=\"margin: 0px; padding: 0px;\">它有助于“单点故障\"，不建议在生产环境中使用。</span></p></li><li style=\"margin: 0px; padding: 0px;\"><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7;\"><span style=\"margin: 0px; padding: 0px;\">如果我们有<strong style=\"margin: 0px; padding: 0px;\">两个节点</strong>而一个节点故障，我们没有占多数，因为两个中的一个不是多数。</span></p></li><li style=\"margin: 0px; padding: 0px;\"><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7;\"><span style=\"margin: 0px; padding: 0px;\">如果我们有<strong style=\"margin: 0px; padding: 0px;\">三个节点</strong>而一个节点故障，那么我们有大多数，因此，这是最低要求。</span><span style=\"margin: 0px; padding: 0px;\">ZooKeeper集合在实际生产环境中必须至少有三个节点。</span></p></li><li style=\"margin: 0px; padding: 0px;\"><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7;\"><span style=\"margin: 0px; padding: 0px;\">如果我们有<strong style=\"margin: 0px; padding: 0px;\">四个节点</strong>而两个节点故障，它将再次故障。类似于有三个节点，</span><span style=\"margin: 0px; padding: 0px;\">额外节点不用于任何目的，因此，最好添加奇数的节点，例如3，5，7。</span></p></li></ul><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">我们知道写入过程比ZooKeeper集合中的读取过程要贵，因为所有节点都需要在数据库中写入相同的数据。</span><span style=\"margin: 0px; padding: 0px;\">因此，对于平衡的环境拥有较少数量（例如3，5，7）的节点比拥有大量的节点要好。</span></p><p trans_replace=\"0\" trans=\"1\" style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">下图描述了ZooKeeper工作流，后面的表说明了它的不同组件。</span></p>"
    },
    {
      "type": "text",
      "data": "<img src=\"quiver-image-url/B4333233A990A47D90E7C2E3C37A363D.png\" alt=\"2017-11-08 at 7.49 AM.png\" width=\"1052\" height=\"728\">"
    },
    {
      "type": "text",
      "data": "<div class=\"content-bg\" style=\"margin: 0px; padding: 0px; width: auto; max-width: 980px; box-sizing: border-box; color: rgb(0, 0, 0); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><div class=\"content-intro view-box \" style=\"margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 15px 0px 20px; line-height: 1.7; color: rgb(0, 0, 0); outline: none; word-wrap: break-word; min-height: 600px; margin-top: 0px !important;\"><table class=\"table table-bordered       \" style=\"margin: 15px 0px; padding: 0px; width: 979px; table-layout: fixed;\"><tbody style=\"margin: 0px; padding: 0px;\"><tr style=\"margin: 0px; padding: 0px;\"><th trans_replace=\"0\" trans=\"1\" style=\"margin: 0px; padding: 2px 4px; background-color: rgb(255, 255, 255); border-color: rgb(204, 204, 204); width: 265px;\"><span style=\"margin: 0px; padding: 0px;\">组件</span></th><th trans_replace=\"0\" trans=\"1\" style=\"margin: 0px; padding: 2px 4px; background-color: rgb(255, 255, 255); border-color: rgb(204, 204, 204);\">描述</th></tr><tr style=\"margin: 0px; padding: 0px;\"><td trans=\"1\" style=\"margin: 0px; padding: 2px 4px; min-width: 40px; height: 30px; border-color: rgb(204, 204, 204); vertical-align: top; box-sizing: border-box;\">写入（write）</td><td trans_replace=\"0\" trans=\"1\" style=\"margin: 0px; padding: 2px 4px; min-width: 40px; height: 30px; border-color: rgb(204, 204, 204); vertical-align: top; box-sizing: border-box;\"><span style=\"margin: 0px; padding: 0px;\">写入过程由leader节点处理。leader</span><span style=\"margin: 0px; padding: 0px;\">将写入请求转发到所有znode，并等待znode的回复。</span><span style=\"margin: 0px; padding: 0px;\">如果一半的znode回复，则写入过程完成。</span></td></tr><tr style=\"margin: 0px; padding: 0px;\"><td trans=\"1\" style=\"margin: 0px; padding: 2px 4px; min-width: 40px; height: 30px; border-color: rgb(204, 204, 204); vertical-align: top; box-sizing: border-box;\">读取（read）</td><td trans_replace=\"0\" trans=\"1\" style=\"margin: 0px; padding: 2px 4px; min-width: 40px; height: 30px; border-color: rgb(204, 204, 204); vertical-align: top; box-sizing: border-box;\"><span style=\"margin: 0px; padding: 0px;\">读取由特定连接的znode在内部执行，因此不需要与集群进行交互。</span></td></tr><tr style=\"margin: 0px; padding: 0px;\"><td trans_replace=\"0\" trans=\"1\" style=\"margin: 0px; padding: 2px 4px; min-width: 40px; height: 30px; border-color: rgb(204, 204, 204); vertical-align: top; box-sizing: border-box;\"><span style=\"margin: 0px; padding: 0px;\">复制数据库（replicated database）</span></td><td trans_replace=\"0\" trans=\"1\" style=\"margin: 0px; padding: 2px 4px; min-width: 40px; height: 30px; border-color: rgb(204, 204, 204); vertical-align: top; box-sizing: border-box;\"><span style=\"margin: 0px; padding: 0px;\">它用于在zookeeper中存储数据。</span><span style=\"margin: 0px; padding: 0px;\">每个znode都有自己的数据库，每个znode在一致性的帮助下每次都有相同的数据。</span></td></tr><tr style=\"margin: 0px; padding: 0px;\"><td trans=\"1\" style=\"margin: 0px; padding: 2px 4px; min-width: 40px; height: 30px; border-color: rgb(204, 204, 204); vertical-align: top; box-sizing: border-box;\">Leader</td><td trans_replace=\"0\" trans=\"1\" style=\"margin: 0px; padding: 2px 4px; min-width: 40px; height: 30px; border-color: rgb(204, 204, 204); vertical-align: top; box-sizing: border-box;\"><span style=\"margin: 0px; padding: 0px;\">Leader是负责处理写入请求的Znode。</span></td></tr><tr style=\"margin: 0px; padding: 0px;\"><td trans=\"1\" style=\"margin: 0px; padding: 2px 4px; min-width: 40px; height: 30px; border-color: rgb(204, 204, 204); vertical-align: top; box-sizing: border-box;\">Follower</td><td trans_replace=\"0\" trans=\"1\" style=\"margin: 0px; padding: 2px 4px; min-width: 40px; height: 30px; border-color: rgb(204, 204, 204); vertical-align: top; box-sizing: border-box;\"><span style=\"margin: 0px; padding: 0px;\">follower从客户端接收写入请求，并将它们转发到leader znode。</span></td></tr><tr style=\"margin: 0px; padding: 0px;\"><td trans_replace=\"0\" trans=\"1\" style=\"margin: 0px; padding: 2px 4px; min-width: 40px; height: 30px; border-color: rgb(204, 204, 204); vertical-align: top; box-sizing: border-box;\"><span style=\"margin: 0px; padding: 0px;\">请求处理器（request processor）</span></td><td trans_replace=\"0\" trans=\"1\" style=\"margin: 0px; padding: 2px 4px; min-width: 40px; height: 30px; border-color: rgb(204, 204, 204); vertical-align: top; box-sizing: border-box;\"><span style=\"margin: 0px; padding: 0px;\">只存在于leader节点。</span><span style=\"margin: 0px; padding: 0px;\">它管理来自follower节点的写入请求。</span></td></tr><tr style=\"margin: 0px; padding: 0px;\"><td trans_replace=\"0\" trans=\"1\" style=\"margin: 0px; padding: 2px 4px; min-width: 40px; height: 30px; border-color: rgb(204, 204, 204); vertical-align: top; box-sizing: border-box;\"><span style=\"margin: 0px; padding: 0px;\">原子广播（atomic broadcasts）</span></td><td trans_replace=\"0\" trans=\"1\" style=\"margin: 0px; padding: 2px 4px; min-width: 40px; height: 30px; border-color: rgb(204, 204, 204); vertical-align: top; box-sizing: border-box;\"><span style=\"margin: 0px; padding: 0px;\">负责广播从leader节点到follower节点的变化。</span></td></tr></tbody></table></div></div>"
    }
  ]
}