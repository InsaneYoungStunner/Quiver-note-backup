{
  "title": "?P<name>...",
  "cells": [
    {
      "type": "text",
      "data": "<div>(?P&lt;name&gt;...)</div><div>Similar to regular parentheses, but the substring matched by the group is accessible within the rest of the regular expression via the symbolic group name name. Group names must be valid Python identifiers, and each group name must be defined only once within a regular expression. A symbolic group is also a numbered group, just as if the group were not named. So the group named id in the example below can also be referenced as the numbered group 1.</div><div>For example, if the pattern is (?P&lt;id&gt;[a-zA-Z_]\\w*), the group can be referenced by its name in arguments to methods of match objects, such as m.group('id') or m.end('id'), and also by name in the regular expression itself (using (?P=id)) and replacement text given to .sub() (using \\g&lt;id&gt;).</div>"
    },
    {
      "type": "text",
      "data": "<img src=\"quiver-image-url/A282855EAA650D27D0EC531310F7D8E3.png\" alt=\"2017-11-04 at 7.24 PM.png\" width=\"799\" height=\"327\">"
    }
  ]
}