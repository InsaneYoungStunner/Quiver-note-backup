{
  "title": "Spring Bean 生命周期",
  "cells": [
    {
      "type": "text",
      "data": "<h2 style=\"margin: 0px 0px 10px; padding: 0.25em 0px 0px; color: rgb(0, 0, 0); line-height: 1.7; font-size: 16px; border-top-style: none; font-family: Verdana, Arial, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">Bean 的生命周期</h2><p style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">理解 Spring bean 的生命周期很容易。当一个 bean 被实例化时，它可能需要执行一些初始化使它转换成可用状态。同样，当 bean 不再需要，并且从容器中移除时，可能需要做一些清除工作。</p><p style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">尽管还有一些在 Bean 实例化和销毁之间发生的活动，但是本章将只讨论两个重要的生命周期回调方法，它们在 bean 的初始化和销毁的时候是必需的。</p><p style=\"margin: 0px 0px 5px; padding: 0px; word-wrap: break-word; color: rgb(0, 0, 0); line-height: 1.7; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">为了定义安装和拆卸一个 bean，我们只要声明带有&nbsp;<strong style=\"margin: 0px; padding: 0px;\">init-method</strong>&nbsp;和/或&nbsp;<strong style=\"margin: 0px; padding: 0px;\">destroy-method</strong>&nbsp;参数的 。init-method 属性指定一个方法，在实例化 bean 时，立即调用该方法。同样，destroy-method 指定一个方法，只有从容器中移除 bean 之后，才能调用该方法。</p>"
    },
    {
      "type": "markdown",
      "data": "## 有两种初始化方式："
    },
    {
      "type": "text",
      "data": "### 实现<span style=\"color: rgb(169, 183, 198); font-family: Menlo; font-size: 13.5pt; background-color: rgb(43, 43, 43);\">InitializingBean</span><span style=\"color: rgb(204, 120, 50); font-family: Menlo; font-size: 13.5pt; background-color: rgb(43, 43, 43);\">,</span><span style=\"color: rgb(169, 183, 198); font-family: Menlo; font-size: 13.5pt; background-color: rgb(43, 43, 43);\">DisposableBean</span>"
    },
    {
      "type": "code",
      "language": "java",
      "data": "import org.springframework.beans.factory.DisposableBean;\nimport org.springframework.beans.factory.InitializingBean;\n\npublic class HelloSpring2 implements InitializingBean,DisposableBean{\n    public HelloSpring2() {\n    }\n\n    public void destroy() throws Exception {\n        System.out.println(\"hello spring2 destroy now\");\n    }\n\n    public void afterPropertiesSet() throws Exception {\n        System.out.println(\"hello spring2 init now\");\n    }\n}"
    },
    {
      "type": "text",
      "data": "在对应的xml里面配置："
    },
    {
      "type": "code",
      "language": "xml",
      "data": "<bean id=\"helloWorld\" class=\"HelloSpring\" init-method=\"init\" destroy-method=\"destroy\" >\n    <property name=\"message\" value=\"Hello World!\"/>\n</bean>"
    },
    {
      "type": "text",
      "data": "第二种方式可以自定义方法名字。"
    }
  ]
}